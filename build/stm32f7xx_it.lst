ARM GAS  /tmp/ccFi2GnX.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_it.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.NMI_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	NMI_Handler
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	NMI_Handler:
  26              	.LFB141:
  27              		.file 1 "Src/stm32f7xx_it.c"
   1:Src/stm32f7xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f7xx_it.c **** /**
   3:Src/stm32f7xx_it.c ****   ******************************************************************************
   4:Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   5:Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f7xx_it.c ****   ******************************************************************************
   7:Src/stm32f7xx_it.c ****   * @attention
   8:Src/stm32f7xx_it.c ****   *
   9:Src/stm32f7xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Src/stm32f7xx_it.c ****   * All rights reserved.
  11:Src/stm32f7xx_it.c ****   *
  12:Src/stm32f7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32f7xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32f7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32f7xx_it.c ****   *
  16:Src/stm32f7xx_it.c ****   ******************************************************************************
  17:Src/stm32f7xx_it.c ****   */
  18:Src/stm32f7xx_it.c **** /* USER CODE END Header */
  19:Src/stm32f7xx_it.c **** 
  20:Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32f7xx_it.c **** #include "main.h"
  22:Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  23:Src/stm32f7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32f7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f7xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32f7xx_it.c **** 
  27:Src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32f7xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32f7xx_it.c **** 
  30:Src/stm32f7xx_it.c **** /* USER CODE END TD */
  31:Src/stm32f7xx_it.c **** 
ARM GAS  /tmp/ccFi2GnX.s 			page 2


  32:Src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32f7xx_it.c **** 
  35:Src/stm32f7xx_it.c **** /* USER CODE END PD */
  36:Src/stm32f7xx_it.c **** 
  37:Src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32f7xx_it.c **** 
  40:Src/stm32f7xx_it.c **** /* USER CODE END PM */
  41:Src/stm32f7xx_it.c **** 
  42:Src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32f7xx_it.c **** 
  45:Src/stm32f7xx_it.c **** /* USER CODE END PV */
  46:Src/stm32f7xx_it.c **** 
  47:Src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32f7xx_it.c **** 
  50:Src/stm32f7xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32f7xx_it.c **** 
  52:Src/stm32f7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32f7xx_it.c **** 
  55:Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32f7xx_it.c **** 
  57:Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32f7xx_it.c **** extern TIM_HandleTypeDef htim1;
  59:Src/stm32f7xx_it.c **** extern UART_HandleTypeDef huart3;
  60:Src/stm32f7xx_it.c **** /* USER CODE BEGIN EV */
  61:Src/stm32f7xx_it.c **** 
  62:Src/stm32f7xx_it.c **** /* USER CODE END EV */
  63:Src/stm32f7xx_it.c **** 
  64:Src/stm32f7xx_it.c **** /******************************************************************************/
  65:Src/stm32f7xx_it.c **** /*           Cortex-M7 Processor Interruption and Exception Handlers          */
  66:Src/stm32f7xx_it.c **** /******************************************************************************/
  67:Src/stm32f7xx_it.c **** /**
  68:Src/stm32f7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Src/stm32f7xx_it.c ****   */
  70:Src/stm32f7xx_it.c **** void NMI_Handler(void)
  71:Src/stm32f7xx_it.c **** {
  28              		.loc 1 71 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  72:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Src/stm32f7xx_it.c **** 
  74:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Src/stm32f7xx_it.c ****   while (1)
  35              		.loc 1 76 3 discriminator 1 view .LVU1
  77:Src/stm32f7xx_it.c ****   {
  78:Src/stm32f7xx_it.c ****   }
  36              		.loc 1 78 3 discriminator 1 view .LVU2
  76:Src/stm32f7xx_it.c ****   {
ARM GAS  /tmp/ccFi2GnX.s 			page 3


  37              		.loc 1 76 9 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE141:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv5-d16
  50              	HardFault_Handler:
  51              	.LFB142:
  79:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Src/stm32f7xx_it.c **** }
  81:Src/stm32f7xx_it.c **** 
  82:Src/stm32f7xx_it.c **** /**
  83:Src/stm32f7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Src/stm32f7xx_it.c ****   */
  85:Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  86:Src/stm32f7xx_it.c **** {
  52              		.loc 1 86 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  87:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Src/stm32f7xx_it.c **** 
  89:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Src/stm32f7xx_it.c ****   while (1)
  59              		.loc 1 90 3 discriminator 1 view .LVU5
  91:Src/stm32f7xx_it.c ****   {
  92:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Src/stm32f7xx_it.c ****   }
  60              		.loc 1 94 3 discriminator 1 view .LVU6
  90:Src/stm32f7xx_it.c ****   {
  61              		.loc 1 90 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE142:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv5-d16
  74              	MemManage_Handler:
  75              	.LFB143:
  95:Src/stm32f7xx_it.c **** }
  96:Src/stm32f7xx_it.c **** 
  97:Src/stm32f7xx_it.c **** /**
  98:Src/stm32f7xx_it.c ****   * @brief This function handles Memory management fault.
  99:Src/stm32f7xx_it.c ****   */
ARM GAS  /tmp/ccFi2GnX.s 			page 4


 100:Src/stm32f7xx_it.c **** void MemManage_Handler(void)
 101:Src/stm32f7xx_it.c **** {
  76              		.loc 1 101 1 view -0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.L6:
 102:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Src/stm32f7xx_it.c **** 
 104:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Src/stm32f7xx_it.c ****   while (1)
  83              		.loc 1 105 3 discriminator 1 view .LVU9
 106:Src/stm32f7xx_it.c ****   {
 107:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f7xx_it.c ****   }
  84              		.loc 1 109 3 discriminator 1 view .LVU10
 105:Src/stm32f7xx_it.c ****   {
  85              		.loc 1 105 9 discriminator 1 view .LVU11
  86 0000 FEE7     		b	.L6
  87              		.cfi_endproc
  88              	.LFE143:
  90              		.section	.text.BusFault_Handler,"ax",%progbits
  91              		.align	1
  92              		.global	BusFault_Handler
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv5-d16
  98              	BusFault_Handler:
  99              	.LFB144:
 110:Src/stm32f7xx_it.c **** }
 111:Src/stm32f7xx_it.c **** 
 112:Src/stm32f7xx_it.c **** /**
 113:Src/stm32f7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 114:Src/stm32f7xx_it.c ****   */
 115:Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 116:Src/stm32f7xx_it.c **** {
 100              		.loc 1 116 1 view -0
 101              		.cfi_startproc
 102              		@ Volatile: function does not return.
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106              	.L8:
 117:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Src/stm32f7xx_it.c **** 
 119:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Src/stm32f7xx_it.c ****   while (1)
 107              		.loc 1 120 3 discriminator 1 view .LVU13
 121:Src/stm32f7xx_it.c ****   {
 122:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Src/stm32f7xx_it.c ****   }
 108              		.loc 1 124 3 discriminator 1 view .LVU14
ARM GAS  /tmp/ccFi2GnX.s 			page 5


 120:Src/stm32f7xx_it.c ****   {
 109              		.loc 1 120 9 discriminator 1 view .LVU15
 110 0000 FEE7     		b	.L8
 111              		.cfi_endproc
 112              	.LFE144:
 114              		.section	.text.UsageFault_Handler,"ax",%progbits
 115              		.align	1
 116              		.global	UsageFault_Handler
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv5-d16
 122              	UsageFault_Handler:
 123              	.LFB145:
 125:Src/stm32f7xx_it.c **** }
 126:Src/stm32f7xx_it.c **** 
 127:Src/stm32f7xx_it.c **** /**
 128:Src/stm32f7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Src/stm32f7xx_it.c ****   */
 130:Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 131:Src/stm32f7xx_it.c **** {
 124              		.loc 1 131 1 view -0
 125              		.cfi_startproc
 126              		@ Volatile: function does not return.
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.L10:
 132:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Src/stm32f7xx_it.c **** 
 134:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Src/stm32f7xx_it.c ****   while (1)
 131              		.loc 1 135 3 discriminator 1 view .LVU17
 136:Src/stm32f7xx_it.c ****   {
 137:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Src/stm32f7xx_it.c ****   }
 132              		.loc 1 139 3 discriminator 1 view .LVU18
 135:Src/stm32f7xx_it.c ****   {
 133              		.loc 1 135 9 discriminator 1 view .LVU19
 134 0000 FEE7     		b	.L10
 135              		.cfi_endproc
 136              	.LFE145:
 138              		.section	.text.SVC_Handler,"ax",%progbits
 139              		.align	1
 140              		.global	SVC_Handler
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv5-d16
 146              	SVC_Handler:
 147              	.LFB146:
 140:Src/stm32f7xx_it.c **** }
 141:Src/stm32f7xx_it.c **** 
 142:Src/stm32f7xx_it.c **** /**
 143:Src/stm32f7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Src/stm32f7xx_it.c ****   */
ARM GAS  /tmp/ccFi2GnX.s 			page 6


 145:Src/stm32f7xx_it.c **** void SVC_Handler(void)
 146:Src/stm32f7xx_it.c **** {
 148              		.loc 1 146 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 147:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Src/stm32f7xx_it.c **** 
 149:Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:Src/stm32f7xx_it.c **** 
 152:Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Src/stm32f7xx_it.c **** }
 153              		.loc 1 153 1 view .LVU21
 154 0000 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE146:
 158              		.section	.text.DebugMon_Handler,"ax",%progbits
 159              		.align	1
 160              		.global	DebugMon_Handler
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv5-d16
 166              	DebugMon_Handler:
 167              	.LFB147:
 154:Src/stm32f7xx_it.c **** 
 155:Src/stm32f7xx_it.c **** /**
 156:Src/stm32f7xx_it.c ****   * @brief This function handles Debug monitor.
 157:Src/stm32f7xx_it.c ****   */
 158:Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 159:Src/stm32f7xx_it.c **** {
 168              		.loc 1 159 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 160:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Src/stm32f7xx_it.c **** 
 162:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Src/stm32f7xx_it.c **** 
 165:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:Src/stm32f7xx_it.c **** }
 173              		.loc 1 166 1 view .LVU23
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE147:
 178              		.section	.text.PendSV_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	PendSV_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv5-d16
 186              	PendSV_Handler:
ARM GAS  /tmp/ccFi2GnX.s 			page 7


 187              	.LFB148:
 167:Src/stm32f7xx_it.c **** 
 168:Src/stm32f7xx_it.c **** /**
 169:Src/stm32f7xx_it.c ****   * @brief This function handles Pendable request for system service.
 170:Src/stm32f7xx_it.c ****   */
 171:Src/stm32f7xx_it.c **** void PendSV_Handler(void)
 172:Src/stm32f7xx_it.c **** {
 188              		.loc 1 172 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 173:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Src/stm32f7xx_it.c **** 
 175:Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Src/stm32f7xx_it.c **** 
 178:Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Src/stm32f7xx_it.c **** }
 193              		.loc 1 179 1 view .LVU25
 194 0000 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE148:
 198              		.section	.text.SysTick_Handler,"ax",%progbits
 199              		.align	1
 200              		.global	SysTick_Handler
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv5-d16
 206              	SysTick_Handler:
 207              	.LFB149:
 180:Src/stm32f7xx_it.c **** 
 181:Src/stm32f7xx_it.c **** /**
 182:Src/stm32f7xx_it.c ****   * @brief This function handles System tick timer.
 183:Src/stm32f7xx_it.c ****   */
 184:Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 185:Src/stm32f7xx_it.c **** {
 208              		.loc 1 185 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI0:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 186:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Src/stm32f7xx_it.c **** 
 188:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Src/stm32f7xx_it.c ****   HAL_IncTick();
 217              		.loc 1 189 3 view .LVU27
 218 0002 FFF7FEFF 		bl	HAL_IncTick
 219              	.LVL0:
 190:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Src/stm32f7xx_it.c **** 
 192:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
ARM GAS  /tmp/ccFi2GnX.s 			page 8


 193:Src/stm32f7xx_it.c **** }
 220              		.loc 1 193 1 is_stmt 0 view .LVU28
 221 0006 08BD     		pop	{r3, pc}
 222              		.cfi_endproc
 223              	.LFE149:
 225              		.section	.text.TIM1_BRK_TIM9_IRQHandler,"ax",%progbits
 226              		.align	1
 227              		.global	TIM1_BRK_TIM9_IRQHandler
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv5-d16
 233              	TIM1_BRK_TIM9_IRQHandler:
 234              	.LFB150:
 194:Src/stm32f7xx_it.c **** 
 195:Src/stm32f7xx_it.c **** /******************************************************************************/
 196:Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 197:Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 198:Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 199:Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 200:Src/stm32f7xx_it.c **** /******************************************************************************/
 201:Src/stm32f7xx_it.c **** 
 202:Src/stm32f7xx_it.c **** /**
 203:Src/stm32f7xx_it.c ****   * @brief This function handles TIM1 break interrupt and TIM9 global interrupt.
 204:Src/stm32f7xx_it.c ****   */
 205:Src/stm32f7xx_it.c **** void TIM1_BRK_TIM9_IRQHandler(void)
 206:Src/stm32f7xx_it.c **** {
 235              		.loc 1 206 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 08B5     		push	{r3, lr}
 240              	.LCFI1:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 3, -8
 243              		.cfi_offset 14, -4
 207:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 0 */
 208:Src/stm32f7xx_it.c **** 
 209:Src/stm32f7xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 0 */
 210:Src/stm32f7xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 244              		.loc 1 210 3 view .LVU30
 245 0002 0248     		ldr	r0, .L18
 246 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 247              	.LVL1:
 211:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 1 */
 212:Src/stm32f7xx_it.c **** 
 213:Src/stm32f7xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 1 */
 214:Src/stm32f7xx_it.c **** }
 248              		.loc 1 214 1 is_stmt 0 view .LVU31
 249 0008 08BD     		pop	{r3, pc}
 250              	.L19:
 251 000a 00BF     		.align	2
 252              	.L18:
 253 000c 00000000 		.word	htim1
 254              		.cfi_endproc
 255              	.LFE150:
 257              		.section	.text.USART3_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccFi2GnX.s 			page 9


 258              		.align	1
 259              		.global	USART3_IRQHandler
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu fpv5-d16
 265              	USART3_IRQHandler:
 266              	.LFB151:
 215:Src/stm32f7xx_it.c **** 
 216:Src/stm32f7xx_it.c **** /**
 217:Src/stm32f7xx_it.c ****   * @brief This function handles USART3 global interrupt.
 218:Src/stm32f7xx_it.c ****   */
 219:Src/stm32f7xx_it.c **** void USART3_IRQHandler(void)
 220:Src/stm32f7xx_it.c **** {
 267              		.loc 1 220 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 08B5     		push	{r3, lr}
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 3, -8
 275              		.cfi_offset 14, -4
 221:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 222:Src/stm32f7xx_it.c **** 
 223:Src/stm32f7xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 224:Src/stm32f7xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 276              		.loc 1 224 3 view .LVU33
 277 0002 0248     		ldr	r0, .L22
 278 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 279              	.LVL2:
 225:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 226:Src/stm32f7xx_it.c **** 
 227:Src/stm32f7xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 228:Src/stm32f7xx_it.c **** }
 280              		.loc 1 228 1 is_stmt 0 view .LVU34
 281 0008 08BD     		pop	{r3, pc}
 282              	.L23:
 283 000a 00BF     		.align	2
 284              	.L22:
 285 000c 00000000 		.word	huart3
 286              		.cfi_endproc
 287              	.LFE151:
 289              		.text
 290              	.Letext0:
 291              		.file 2 "/opt/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_types.h"
 292              		.file 3 "/opt/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 293              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 294              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 295              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 296              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 297              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 298              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccFi2GnX.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_it.c
     /tmp/ccFi2GnX.s:17     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccFi2GnX.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccFi2GnX.s:43     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccFi2GnX.s:50     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccFi2GnX.s:67     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccFi2GnX.s:74     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccFi2GnX.s:91     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccFi2GnX.s:98     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccFi2GnX.s:115    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccFi2GnX.s:122    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccFi2GnX.s:139    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccFi2GnX.s:146    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccFi2GnX.s:159    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccFi2GnX.s:166    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccFi2GnX.s:179    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccFi2GnX.s:186    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccFi2GnX.s:199    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccFi2GnX.s:206    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccFi2GnX.s:226    .text.TIM1_BRK_TIM9_IRQHandler:0000000000000000 $t
     /tmp/ccFi2GnX.s:233    .text.TIM1_BRK_TIM9_IRQHandler:0000000000000000 TIM1_BRK_TIM9_IRQHandler
     /tmp/ccFi2GnX.s:253    .text.TIM1_BRK_TIM9_IRQHandler:000000000000000c $d
     /tmp/ccFi2GnX.s:258    .text.USART3_IRQHandler:0000000000000000 $t
     /tmp/ccFi2GnX.s:265    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
     /tmp/ccFi2GnX.s:285    .text.USART3_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_TIM_IRQHandler
htim1
HAL_UART_IRQHandler
huart3
